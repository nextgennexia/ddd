var login = (function () {
  return {
    authorize: function (id, callback) {
      $.post('/get-user', id, function (data) {
        $.each(preparedObj.offers, function () {
          this.user = data;
        });
        login.renderUser();
        if (callback) {
          callback();
        }
      }, 'json', 'text/plain');
    },
    renderUser: function () {
      $('.login-wrap .author').html(preparedObj.userTempl(preparedObj.offers[0].user));
    }
  }
})();
var preparedObj = [];

Array.prototype.last = function () {
  return this[this.length - 1];
};

(function () {
  preparedObj.offerCardTempl = Handlebars.compile($('#offer-card-templ').html());
  preparedObj.offerTempl = Handlebars.compile($('#offer-templ').html());
  preparedObj.userTempl = Handlebars.compile($('#user-plate-templ').html());

  $.get('/offers.json', function (data) {
    preparedObj.offers = data.slice();

    $.each(preparedObj.offers, function () {
      this.states = {
        hiddenComments: true,
        hiddenAnswers: true,
        hiddenOfferLightbox: true
      };
      this.user = {
        fullname: 'Гость',
        avatar: '../../../images/users/anonymous.png'
      };
    });

    $('.js-auth').on('click', handling.loginHandler);
    $('.offer-plates').on({
      'click': handling.offerActionHandler,
      'keypress': handling.commentingHandler
    });
    $('.lightboxes').on({
      'click': handling.offerActionHandler,
      'keypress': handling.commentingHandler
    });

    login.renderUser();
    offerCard.renderOffersCards();
  }, 'json');
})();

var handling = (function () {
  return {
    loginHandler: function(){
      login.authorize($('.js-login').val(), function () {
        offerCard.renderOffersCards();
      });
    },
    offerActionHandler: function (e) {
      var
        _$target = $(e.target),
        _button = _$target.attr('data-button') || _$target.parents('[data-button]').attr('data-button'),
        _messageId = _$target.parents('.author').attr('data-message-id'),
        _offerId = _$target.parents('[data-offer-id]').attr('data-offer-id');

      switch (_button) {
        case 'like':
          offerCard.like(_offerId);
          offerCard.sendData();
          offerCard.renderOfferCard(_offerId);
          break;
        case 'like-lbx':
          offerCard.like(_offerId);
          offerCard.sendData();
          offerCard.renderOfferCard(_offerId);
          offerCard.renderOfferLightbox(_offerId);
          break;
        case 'save':
          offerCard.save(_offerId);
          offerCard.sendData();
          offerCard.renderOfferCard(_offerId);
          break;
        case 'save-lbx':
          offerCard.save(_offerId);
          offerCard.sendData();
          offerCard.renderOfferCard(_offerId);
          offerCard.renderOfferLightbox(_offerId);
          break;
        case 'viewComment':
          offerCard.viewComments(_offerId);
          offerCard.renderOfferCard(_offerId);
          break;
        case 'viewAnswer':
          offerCard.viewAnswers(_offerId);
          offerCard.renderOfferLightbox(_offerId);
          break;
        case 'openOfferLightbox':
          offerCard.openOfferLightbox(_offerId);
          break;
        case 'closeOfferLightbox':
          offerCard.closeOfferLightbox(_offerId);
          break;
        case 'removeComment':
          offerCard.removeComment(_offerId, _messageId);
          offerCard.sendData();
          offerCard.renderOfferCard(_offerId);
          break;
        case 'removeAnswer':
          offerCard.removeAnswer(_offerId, _messageId);
          offerCard.sendData();
          offerCard.renderOfferCard(_offerId);
          offerCard.renderOfferLightbox(_offerId);
          break;
        case 'removeOffer':
          offerCard.removeOffer(_offerId);
          offerCard.sendData();
          offerCard.closeOfferLightbox(_offerId);
          offerCard.renderOffersCards();
          break;
      }
    },
    commentingHandler: function (e) {
      var
        _$target = $(e.target),
        _offerId = _$target.parents('[data-offer-id]').attr('data-offer-id');

      if (((e.keyCode == 13 || e.which == 13) && !e.shiftKey) && _$target.val()) {
        if (_$target.hasClass('js-comment')) {
          offerCard.addComment(_offerId, _$target.val());
          offerCard.sendData();
          offerCard.renderOfferCard(_offerId);
        }
        if (_$target.hasClass('js-answer')) {
          offerCard.addAnswer(_offerId, _$target.val());
          offerCard.sendData();
          offerCard.renderOfferCard(_offerId);
          offerCard.renderOfferLightbox(_offerId);
        }

        _$target.val('');
        e.preventDefault();
      }
    }
  }
})();
Handlebars.registerHelper('ifCond', function (v1, operator, v2, options) {

  switch (operator) {
    case '!=':
      return (v1 != v2) ? options.fn(this) : options.inverse(this);
    case '==':
      return (v1 == v2) ? options.fn(this) : options.inverse(this);
    case '===':
      return (v1 === v2) ? options.fn(this) : options.inverse(this);
    case '<':
      return (v1 < v2) ? options.fn(this) : options.inverse(this);
    case '<=':
      return (v1 <= v2) ? options.fn(this) : options.inverse(this);
    case '>':
      return (v1 > v2) ? options.fn(this) : options.inverse(this);
    case '>=':
      return (v1 >= v2) ? options.fn(this) : options.inverse(this);
    case '&&':
      return (v1 && v2) ? options.fn(this) : options.inverse(this);
    case '||':
      return (v1 || v2) ? options.fn(this) : options.inverse(this);
    default:
      return options.inverse(this);
  }
});

Handlebars.registerHelper('renderLatestMessages', function (context, countItem, options) {
  return options.fn($.grep(context, function (item, index) {
    return !item.removed;
  }).slice(-countItem));
});

Handlebars.registerHelper('trancate', function (context, messageLength, options) {
  return (context.length > messageLength) ? options.fn(context.slice(0, messageLength) + '...') : options.fn(context);
});


var offerCard = (function () {

  function _addMessage(subject, offerId, message) {
    preparedObj.offers[offerId][subject].push({
      id: preparedObj.offers[offerId][subject].length,
      userId: preparedObj.offers[offerId].user.id,
      avatar: preparedObj.offers[offerId].user.avatar,
      comment: message
    });
  };

  function _countActions(subject, offerId) {
    var _hasAction = false;

    $.each(preparedObj.offers[offerId][subject], function (i) {
      if (this.userId == preparedObj.offers[offerId].user.id) {
        _hasAction = true;
        preparedObj.offers[offerId][subject].splice(i, 1);
        return false;
      }
    });

    if (!_hasAction) {
      preparedObj.offers[offerId][subject].push({
        userId: preparedObj.offers[offerId].user.id,
        avatar: preparedObj.offers[offerId].user.avatar
      });
    }
  };

  function _toogleView(subject, offerId, switcher) {
    if (switcher === true) {
      preparedObj.offers[offerId].states[subject] = false;
    } else if (switcher === false) {
      preparedObj.offers[offerId].states[subject] = true;
    } else {
      preparedObj.offers[offerId].states[subject] = !preparedObj.offers[offerId].states[subject];
    }
  }

  return {
    like: function (offerId) {
      _countActions('likes', offerId);
    },
    save: function (offerId) {
      _countActions('saved', offerId);
    },
    viewComments: function (offerId) {
      _toogleView('hiddenComments', offerId);
    },
    viewAnswers: function (offerId) {
      _toogleView('hiddenAnswers', offerId);
    },
    addComment: function (offerId, message) {
      _addMessage('comments', offerId, message);
    },
    addAnswer: function (offerId, message) {
      _addMessage('answers', offerId, message);
    },
    removeComment: function (offerId, messageId) {
      preparedObj.offers[offerId].comments[messageId].removed = true;
    },
    removeAnswer: function (offerId, messageId) {
      preparedObj.offers[offerId].answers[messageId].removed = true;
    },
    openOfferLightbox: function (offerId) {
      _toogleView('hiddenOfferLightbox', offerId, true);
      $('body').addClass('lock');
      offerCard.renderOfferLightbox(offerId);
    },
    closeOfferLightbox: function (offerId) {
      _toogleView('hiddenOfferLightbox', offerId, false);
      $('body').removeClass('lock');
      offerCard.renderOfferLightbox(offerId);
    },
    removeOffer: function (offerId) {
      preparedObj.offers[offerId].removed = true;
    },
    sendData: function () {
      $.ajax({
        method: 'POST',
        url: '/refresh',
        data: JSON.stringify(preparedObj.offers),
        dataType: 'json',
        success: function (data) {
          try {
            preparedObj.offers = data.slice();
          } catch (e) {
            sendData();
          }
        }
      });
    },
    renderOffersCards: function () {
      var
        _columns = $('.column'),
        _offerIndex = 0;

      $.each(_columns, function () {
        $(this).html('');
      });

      $.each(preparedObj.offers, function (index, item) {
        if (!item.removed) {
          if (_offerIndex > 3) {
            _offerIndex = 0;
          }
          $(_columns[_offerIndex]).append(preparedObj.offerCardTempl(item));
          _offerIndex++;
        }
      });
    },
    renderOfferCard: function (offerId) {
      $('.js-offer-wrap[data-offer-id="' + offerId + '"]').replaceWith(preparedObj.offerCardTempl(preparedObj.offers[offerId]));
    },
    renderOfferLightbox: function (offerId) {
      $('.lightboxes').html(preparedObj.offerTempl(preparedObj.offers[offerId]));
    }
  };
})();