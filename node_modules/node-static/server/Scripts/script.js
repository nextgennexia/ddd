Array.prototype.last = function () {
  return this[this.length - 1];
};

function getLoggedUser(id) {
  $.post('/get-user', id, function (data) {

    $.each(preparedObj.offers, function () {
      this.user = data;
    });

    renderUser(preparedObj.userTempl);
    renderOffersCards(preparedObj.offerCardTempl);

  }, 'json', 'text/plain');
};

(function ($) {
  $.offerCard = function (params) {
    var offer = {
      params: $.extend(params),
      like: function () {
        offer.countActions('likes');
      },
      save: function () {
        offer.countActions('saved');
      },
      viewComments: function (subject) {
        preparedObj.offers[params.offerId].states[subject] = !preparedObj.offers[params.offerId].states[subject];
        params.offerNode.find('.comments').toggleClass('hidden');
        params.targetNode.toggleClass('active');
      },
      toogleOfferLightbox: function () {
        $('body').toggleClass('lock');
        $('.lightbox-wrap').toggleClass('hidden');
      },
      addMessage: function (subject, message) {
        var currentId;

        if (!preparedObj.offers[params.offerId][subject][0].count) {
          currentId = 0
        } else {
          currentId = preparedObj.offers[params.offerId][subject][0].fromUsers.last().id + 1;
        }

        obj = {
          id: currentId,
          userId: preparedObj.offers[params.offerId].user.id,
          avatar: preparedObj.offers[params.offerId].user.avatar,
          comment: message
        }

        preparedObj.offers[params.offerId][subject][0].count += 1;
        preparedObj.offers[params.offerId][subject][0].fromUsers.push(obj);
      },
      removeMessage: function (subject) {
        $.each(preparedObj.offers[params.offerId][subject][0].fromUsers, function () {
          if (this.id == params.targetNode.parents('.author').attr('data-id')) {
            preparedObj.offers[params.offerId][subject][0].count -= 1;
            this.removed = true;
            return false;
          }
        });
      },
      removeOffer: function () {
        preparedObj.offers[params.offerId].removed = true;
      },
      countActions: function (subject) {
        var hasAction = false;

        $.each(preparedObj.offers[params.offerId][subject][0].fromUsers, function (i) {
          if (this.userId == preparedObj.offers[params.offerId].user.id) {
            hasAction = true;
            preparedObj.offers[params.offerId][subject][0].count -= 1;
            preparedObj.offers[params.offerId][subject][0].fromUsers.splice(i, 1);
            return false;
          }
        });

        if (!hasAction) {
          preparedObj.offers[params.offerId][subject][0].count += 1;
          obj = {
            userId: preparedObj.offers[params.offerId].user.id,
            avatar: preparedObj.offers[params.offerId].user.avatar
          }
          preparedObj.offers[params.offerId][subject][0].fromUsers.push(obj);
        }
      },
      sendData: function () {
        $.ajax({
          method: 'POST',
          url: '/refresh',
          data: JSON.stringify(preparedObj.offers),
          dataType: 'json',
          success: function (data) {
            try {
              preparedObj.offers = data.slice();
            } catch (e) {
              sendData();
            }
          }
        });
      }
    };

    return {
      like: offer.like,
      save: offer.save,
      viewComments: offer.viewComments,
      toogleOfferLightbox: offer.toogleOfferLightbox,
      addMessage: offer.addMessage,
      removeMessage: offer.removeMessage,
      removeOffer: offer.removeOffer,
      sendData: offer.sendData
    }
  }
})(jQuery);
var preparedObj = [];

(function () {
  preparedObj.offerCardTempl = Handlebars.compile($('#offer-card-templ').html());
  preparedObj.offerTempl = Handlebars.compile($('#offer-templ').html());
  preparedObj.userTempl = Handlebars.compile($('#user-plate-templ').html());

  $.get('/offers.json', function (data) {
    preparedObj.offers = data.slice();

    $.each(preparedObj.offers, function () {
      this.states = {
        hiddenComments: true,
        hiddenAnswers: true
      };
      this.user = {
        fullname: 'Гость',
        avatar: '../../../images/users/anonymous.png'
      };
    });

    renderUser(preparedObj.userTempl);
    renderOffersCards(preparedObj.offerCardTempl);
  }, 'json');
})();

(function ($) {
  $.handlers = function () {

    var handlers = {
      loginHandler: function () {
        getLoggedUser($('.login .field-text').val());
      },
      offerActionHandler: function (e) {
        var
          targetNode = $(e.target),
          button = targetNode.attr('data-button') || targetNode.parents('[data-button]').attr('data-button'),
          offerNode = $(this),
          offerId = offerNode.attr('data-id'),
          offerCard = $.offerCard({
            offerId: offerId,
            targetNode: targetNode,
            offerNode: offerNode
          });

        switch (button) {
          case 'like':
            offerCard.like();
            offerCard.sendData();
            if (offerNode.hasClass('lightbox offer')) {
              renderOffer(preparedObj.offerTempl, offerId);
            }
            renderOfferCard(preparedObj.offerCardTempl, offerId);
            break;
          case 'save':
            offerCard.save();
            offerCard.sendData();
            if (offerNode.hasClass('lightbox offer')) {
              renderOffer(preparedObj.offerTempl, offerId);
            }
            renderOfferCard(preparedObj.offerCardTempl, offerId);
            break;
          case 'viewComment':
            offerCard.viewComments('hiddenComments');
            break;
          case 'viewAnswer':
            offerCard.viewComments('hiddenAnswers');
            break;
          case 'openOfferLightbox':
            offerCard.toogleOfferLightbox();
            renderOffer(preparedObj.offerTempl, offerId);
            break;
          case 'closeOfferLightbox':
            offerCard.toogleOfferLightbox();
            break;
          case 'removeComment':
            offerCard.removeMessage('comments');
            offerCard.sendData();
            renderOfferCard(preparedObj.offerCardTempl, offerId);
            break;
          case 'removeAnswer':
            offerCard.removeMessage('answers');
            offerCard.sendData();
            renderOfferCard(preparedObj.offerCardTempl, offerId);
            renderOffer(preparedObj.offerTempl, offerId);
            break;
          case 'removeOffer':
            offerCard.removeOffer();
            offerCard.sendData();
            offerCard.toogleOfferLightbox();
            renderOffersCards(preparedObj.offerCardTempl);
            break;
        }
      },
      commentingHandler: function (e) {
        var
         offerId = $(this).attr('data-id'),
         offerCard = $.offerCard({
           offerId: offerId
         });

        if (((e.keyCode == 13 || e.which == 13) && !e.shiftKey) && this.value) {
          if ($(this).hasClass('js-comment')) {
            offerCard.addMessage('comments', this.value);
            offerCard.sendData();
            renderOfferCard(preparedObj.offerCardTempl, offerId);
          }
          if ($(this).hasClass('js-answer')) {
            offerCard.addMessage('answers', this.value);
            offerCard.sendData();
            renderOfferCard(preparedObj.offerCardTempl, offerId);
            renderOffer(preparedObj.offerTempl, offerId);
          }

          $(this).val('');
          e.preventDefault();
        }
      }
    }

    return {
      loginHandler: handlers.loginHandler,
      offerActionHandler: handlers.offerActionHandler,
      commentingHandler: handlers.commentingHandler
    }
  };
})(jQuery);
Handlebars.registerHelper('ifCond', function (v1, operator, v2, options) {

  switch (operator) {
    case '!=':
      return (v1 != v2) ? options.fn(this) : options.inverse(this);
    case '==':
      return (v1 == v2) ? options.fn(this) : options.inverse(this);
    case '===':
      return (v1 === v2) ? options.fn(this) : options.inverse(this);
    case '<':
      return (v1 < v2) ? options.fn(this) : options.inverse(this);
    case '<=':
      return (v1 <= v2) ? options.fn(this) : options.inverse(this);
    case '>':
      return (v1 > v2) ? options.fn(this) : options.inverse(this);
    case '>=':
      return (v1 >= v2) ? options.fn(this) : options.inverse(this);
    case '&&':
      return (v1 && v2) ? options.fn(this) : options.inverse(this);
    case '||':
      return (v1 || v2) ? options.fn(this) : options.inverse(this);
    default:
      return options.inverse(this);
  }
});

Handlebars.registerHelper('renderLatestMessages', function (context, countMessage, messageLength, options) {
  var
      ret = '',
      i = 0,
      comment,
      lastId = context.length - 1;

  for (i; i < countMessage; i++) {
    if (context[lastId]) {
      if (context[lastId].removed) {
        lastId--;
        i--;
        continue;
      }
      comment = context[lastId].comment;

      if (messageLength && context[lastId].comment.length > messageLength) {
        context[lastId].comment = context[lastId].comment.slice(0, messageLength) + '...';
      }

      ret = options.fn(context[lastId]) + ret;
      context[lastId].comment = comment;
      lastId--;
    }
  }

  return ret;
});
function renderOffersCards(template) {
  var
    columns = $('.column'),
    handlers = $.handlers(),
    offerIndex = 0,
    i;

  $.each(columns, function () {
    $(this).html('');
  });

  while (offerIndex < preparedObj.offers.length) {
    for (i = 0; i < columns.length; i++) {
      if (preparedObj.offers[offerIndex].removed) {
        offerIndex++;
        i--;
        continue;
      }
      $(columns[i]).append(template(preparedObj.offers[offerIndex]));
      offerIndex++;
      if (offerIndex >= preparedObj.offers.length) break;
    }
  }

  $('.js-offer-card-wrap').on('click', handlers.offerActionHandler);
  $('.js-comment').on('keypress', handlers.commentingHandler);
}

function renderOfferCard(template, offerIndex) {
  var handlers = $.handlers();

  $('.js-offer-card-wrap[data-id="' + offerIndex + '"]').replaceWith(template(preparedObj.offers[offerIndex]));
  $('.js-offer-card-wrap[data-id="' + offerIndex + '"]').on('click', handlers.offerActionHandler);
  $('.js-offer-card-wrap[data-id="' + offerIndex + '"] .js-comment').on('keypress', handlers.commentingHandler);
}

function renderOffer(template, offerIndex) {
  var handlers = $.handlers();

  $('.lightbox-wrap').html(template(preparedObj.offers[offerIndex]));
  $('.lightbox.offer').on('click', handlers.offerActionHandler);
  $('.js-answer').on('keypress', handlers.commentingHandler);
}

function renderUser(template) {
  var handlers = $.handlers();

  $('.login-wrap').html(template(preparedObj.offers[0].user));
  $('.login .button').on('click', handlers.loginHandler);
}