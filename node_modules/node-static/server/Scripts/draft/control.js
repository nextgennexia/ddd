Array.prototype.last = function () {
  return this[this.length - 1];
};

function getLoggedUser(id) {
  $.post('/get-user', id, function (data) {

    $.each(preparedObj.offers, function () {
      this.user = data;
    });

    renderUser(preparedObj.userTempl);
    renderOffersCards(preparedObj.offerCardTempl);

  }, 'json', 'text/plain');
};

(function ($) {
  $.offerCard = function (params) {
    var offer = {
      params: $.extend(params),
      like: function () {
        offer.countActions('likes');
      },
      save: function () {
        offer.countActions('saved');
      },
      viewComments: function (subject) {
        preparedObj.offers[params.offerId].states[subject] = !preparedObj.offers[params.offerId].states[subject];
        params.offerNode.find('.comments').toggleClass('hidden');
        params.targetNode.toggleClass('active');
      },
      toogleOfferLightbox: function () {
        $('body').toggleClass('lock');
        $('.lightbox-wrap').toggleClass('hidden');
      },
      addMessage: function (subject, message) {
        var currentId;

        if (!preparedObj.offers[params.offerId][subject][0].count) {
          currentId = 0
        } else {
          currentId = preparedObj.offers[params.offerId][subject][0].fromUsers.last().id + 1;
        }

        obj = {
          id: currentId,
          userId: preparedObj.offers[params.offerId].user.id,
          avatar: preparedObj.offers[params.offerId].user.avatar,
          comment: message
        }

        preparedObj.offers[params.offerId][subject][0].count += 1;
        preparedObj.offers[params.offerId][subject][0].fromUsers.push(obj);
      },
      removeMessage: function (subject) {
        $.each(preparedObj.offers[params.offerId][subject][0].fromUsers, function () {
          if (this.id == params.targetNode.parents('.author').attr('data-id')) {
            preparedObj.offers[params.offerId][subject][0].count -= 1;
            this.removed = true;
            return false;
          }
        });
      },
      removeOffer: function () {
        preparedObj.offers[params.offerId].removed = true;
      },
      countActions: function (subject) {
        var hasAction = false;

        $.each(preparedObj.offers[params.offerId][subject][0].fromUsers, function (i) {
          if (this.userId == preparedObj.offers[params.offerId].user.id) {
            hasAction = true;
            preparedObj.offers[params.offerId][subject][0].count -= 1;
            preparedObj.offers[params.offerId][subject][0].fromUsers.splice(i, 1);
            return false;
          }
        });

        if (!hasAction) {
          preparedObj.offers[params.offerId][subject][0].count += 1;
          obj = {
            userId: preparedObj.offers[params.offerId].user.id,
            avatar: preparedObj.offers[params.offerId].user.avatar
          }
          preparedObj.offers[params.offerId][subject][0].fromUsers.push(obj);
        }
      },
      sendData: function () {
        $.ajax({
          method: 'POST',
          url: '/refresh',
          data: JSON.stringify(preparedObj.offers),
          dataType: 'json',
          success: function (data) {
            try {
              preparedObj.offers = data.slice();
            } catch (e) {
              sendData();
            }
          }
        });
      }
    };

    return {
      like: offer.like,
      save: offer.save,
      viewComments: offer.viewComments,
      toogleOfferLightbox: offer.toogleOfferLightbox,
      addMessage: offer.addMessage,
      removeMessage: offer.removeMessage,
      removeOffer: offer.removeOffer,
      sendData: offer.sendData
    }
  }
})(jQuery);