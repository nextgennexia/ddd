Array.prototype.last = function () {
  return this[this.length - 1];
}

var removedObjects = [{
  offers: [],
  comments: [],
  answers: []
}];

function offerActionHandler(e) {
  var
    $target = $(e.target),
    button = $target.attr('data-button') || $target.parents('[data-button]').attr('data-button'),
    offer = new Offer(this);

  switch (button) {
    case 'like':
      offer.like();
      break;
    case 'save':
      offer.save();
      break;
    case 'viewComment':
      offer.viewComment($target);
      break;
    case 'openOfferLightbox':
      offer.openOfferLightbox();
      break;
    case 'closeOfferLightbox':
      offer.closeOfferLightbox();
      break;
    case 'removeComment':
      offer.removeComment($target.parents('.author'));
      break;
    case 'removeAnswer':
      offer.removeAnswer($target.parents('.author'));
      break;
    case 'removeOffer':
      offer.removeOffer();
      break;
  }
}

function commentingHandler(e) {
  if (((e.keyCode == 13 || e.which == 13) && !e.shiftKey) && this.value) {
    if ($(this).hasClass('js-comment')) {
      new Offer($(this).parents('.offer-plate')).addComment(this.value);
    }
    if ($(this).hasClass('js-answer')) {
      new Offer($(this).parents('.lightbox.offer')).addAnswer(this.value);
    }
    $(this).val('');
    e.preventDefault();
  }
}

function Offer(self) {
  var
    $offer = $(self),
    offerId = $offer.attr('data-id');

  this.like = function () {
    countActions('likes');
    socialActionRefresh();
  }

  this.save = function () {
    countActions('saved');
    socialActionRefresh();
  }

  this.viewComment = function ($target) {
    $offer.find('.comments').toggleClass('hidden');
    $target.toggleClass('active');
  }

  this.openOfferLightbox = function () {
    $('body').addClass('lock');
    $('.lightbox-wrap').removeClass('hidden');
    renderOffer(offerId);
  }

  this.closeOfferLightbox = function () {
    $('body').removeClass('lock');
    $('.lightbox-wrap').addClass('hidden');
  }

  this.addComment = function (comment) {
    addMessage('comments', comment);
    offerRefresh();
    renderTemplate('#social-info-templ', '.offer-plate[data-id="' + offerId + '"] .social-info', offers[offerId]);
    renderTemplate('#latest-comments-templ', '.offer-plate[data-id="' + offerId + '"] .latest-comments',
        offers[offerId]);
  }

  this.addAnswer = function (answer) {
    addMessage('answers', answer);
    offerRefresh();
    renderTemplate('#social-info-templ', '.offer-plate[data-id="' + offerId + '"] .social-info', offers[offerId]);
    renderTemplate('#latest-answers-templ', '.lightbox.offer[data-id="' + offerId + '"] .latest-comments', offers[offerId]);
  }

  this.removeComment = function ($commentElem) {
    removeMessage('comments', $commentElem);
    renderTemplate('#social-info-templ', '.offer-plate[data-id="' + offerId + '"] .social-info', offers[offerId]);
    renderTemplate('#latest-comments-templ', '.offer-plate[data-id="' + offerId + '"] .latest-comments',
        offers[offerId]);
  }

  this.removeAnswer = function ($answerElem) {
    removeMessage('answers', $answerElem);
    renderTemplate('#social-info-templ', '.offer-plate[data-id="' + offerId + '"] .social-info', offers[offerId]);
    renderTemplate('#latest-answers-templ', '.lightbox.offer[data-id="' + offerId + '"] .latest-comments', offers[offerId]);
  }

  this.removeOffer = function () {
    $.each(offers, function (i) {
      if (this.id == offerId) {
        removedObjects[0].offers.push(this);
        offers.splice(i, 1);
        return false;
      }
    })

    this.closeOfferLightbox();
    $('.offer-plate[data-id="' + offerId + '"]').remove();
    offerRefresh();
  }

  function countActions(subject) {
    var hasAction = false;

    $.each(offers[offerId][subject][0].fromUsers, function (i) {
      if (this.userId == user.id) {
        hasAction = true;
        offers[offerId][subject][0].count -= 1;
        offers[offerId][subject][0].fromUsers.splice(i, 1);
        return false;
      }
    });

    if (!hasAction) {
      offers[offerId][subject][0].count += 1;
      obj = {
        userId: user.id,
        avatar: user.avatar
      }
      offers[offerId][subject][0].fromUsers.push(obj);
    }
  }

  function addMessage(subject, message) {
    var currentId;

    if (!offers[offerId][subject][0].count) {
      currentId = 0
    } else {
      currentId = offers[offerId][subject][0].fromUsers.last().id + 1;
    }

    obj = {
      id: currentId,
      userId: user.id,
      avatar: user.avatar,
      comment: message
    }

    offers[offerId][subject][0].count += 1;
    offers[offerId][subject][0].fromUsers.push(obj);
  }

  function removeMessage(subject, $messageElem) {
    var
        comments = offers[offerId][subject][0].fromUsers,
        commentId = $messageElem.attr('data-id');

    $.each(comments, function (i) {
      if (this.id == commentId) {
        removedObjects[0][subject].push(this);
        offers[offerId][subject][0].count -= 1;
        comments.splice(i, 1);
        return false;
      }
    })

    $messageElem.remove();
    offerRefresh();
  }

  function socialActionRefresh() {
    offerRefresh();
    renderTemplate('#social-buttons-templ', '.offer-plate[data-id="' + offerId + '"] .social-actions', offers[offerId]);
    renderTemplate('#social-info-templ', '.offer-plate[data-id="' + offerId + '"] .social-info', offers[offerId]);
    renderTemplate('#lightbox-social-info-templ', '.lightbox.offer[data-id="' + offerId + '"] .lightbox-footer', offers[offerId]);
    renderTemplate('#lightbox-social-buttons-templ', '.lightbox.offer[data-id="' + offerId + '"] .social-actions', offers[offerId]);
  }
}