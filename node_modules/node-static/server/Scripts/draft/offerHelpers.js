Handlebars.registerHelper('ifCond', function (v1, operator, v2, options) {

  switch (operator) {
    case '!=':
      return (v1 != v2) ? options.fn(this) : options.inverse(this);
    case '==':
      return (v1 == v2) ? options.fn(this) : options.inverse(this);
    case '===':
      return (v1 === v2) ? options.fn(this) : options.inverse(this);
    case '<':
      return (v1 < v2) ? options.fn(this) : options.inverse(this);
    case '<=':
      return (v1 <= v2) ? options.fn(this) : options.inverse(this);
    case '>':
      return (v1 > v2) ? options.fn(this) : options.inverse(this);
    case '>=':
      return (v1 >= v2) ? options.fn(this) : options.inverse(this);
    case '&&':
      return (v1 && v2) ? options.fn(this) : options.inverse(this);
    case '||':
      return (v1 || v2) ? options.fn(this) : options.inverse(this);
    default:
      return options.inverse(this);
  }
});

Handlebars.registerHelper('renderLatestMessages', function (context, countItem, options) {
  var
    ret = '',
    res;

  res = $.grep(context, function (item, index) {
    return !item.removed;
  }).slice(-countItem);

  $.each(res, function () {
    ret += options.fn(this);
  });

  return ret;
});

Handlebars.registerHelper('trancate', function (context, messageLength, options) {
  var ret = '';

  if (context.length > messageLength) {
    ret = options.fn(context.slice(0, messageLength) + '...');
  } else {
    ret = options.fn(context);
  }
  return ret;
});