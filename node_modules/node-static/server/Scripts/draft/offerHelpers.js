Handlebars.registerHelper('renderLatestComments', function (context, options) {
  return latestMessagesHelper(context, options, 5, 40);
});

Handlebars.registerHelper('renderLatestAnswers', function (context, options) {
  return latestMessagesHelper(context, options, 3);
});

Handlebars.registerHelper('renderCloseElement', function (context, options) {
  var ret;

  if (context && context == user.id) {
    ret = options.fn(context)
  }

  return ret;
});

Handlebars.registerHelper('like', function (context, options) {
  return addClassHelper(context, options, 'liked', 'active');
});

Handlebars.registerHelper('save', function (context, options) {
  return addClassHelper(context, options, 'saved', 'active');
});

Handlebars.registerHelper('renderButtonRemoveOffer', function (context, options) {
  return addClassHelper(context, options, 'hidden', 'hidden', true);
});

Handlebars.registerHelper('renderCountActions', function (context, options) {
  var ret;

  if (context != 0) {
    ret = options.fn(context);
  };

  return ret;
});

function latestMessagesHelper(context, options, countMessage, messageLength) {
  var
    ret = '',
    i,
    comment;

  if (context.length < countMessage) {
    i = 0;
  } else {
    i = context.length - countMessage;
  };

  for(;i<context.length;i++){
    comment = context[i].comment;

    if (messageLength && context[i].comment.length > messageLength) {
      context[i].comment = context[i].comment.slice(0, messageLength) + '...';
    };

    ret += options.fn(context[i]);
    context[i].comment = comment;
  };

  return ret;
};

function addClassHelper(context, options, elem, className, inverse) {
  var
    ret,
    i;

  $.each(context, function (i) {
    if (inverse && context[i].userId != user.id) {
      context[elem] = className;
    }
    if (!inverse && context[i].userId == user.id) {
      context[elem] = className;
    }
  });

  ret = options.fn(context)
  delete context[elem];

  return ret;
};