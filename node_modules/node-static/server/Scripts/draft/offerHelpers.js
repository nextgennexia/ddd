Handlebars.registerHelper('renderLatestMessages', function (context, subject, options) {
  var
    countItem,
    textLength;

  switch (subject) {
    case 'comments':
      countItem = 5;
      textLength = 40;
      break;
    case 'answers':
      countItem = 3;
      break;
  }

  return latestMessagesHelper(context, options, countItem, textLength);
});

Handlebars.registerHelper('renderCloseElement', function (context, options) {
  if (context == user.id) {
    return options.fn(context)
  }
});

Handlebars.registerHelper('like', function (context, options) {
  return addClassHelper(context, options, 'liked', 'active');
});

Handlebars.registerHelper('save', function (context, options) {
  return addClassHelper(context, options, 'saved', 'active');
});

Handlebars.registerHelper('renderButtonRemoveOffer', function (context, options) {
  return addClassHelper(context, options, 'hidden', 'hidden', true);
});

Handlebars.registerHelper('renderCountActions', function (context, options) {
  if (context) {
    return options.fn(context);
  };
});

function latestMessagesHelper(context, options, countMessage, messageLength) {
  var
    ret = '',
    i,
    comment;

  for (i = context.length - countMessage; i < context.length; i++) {
    if (context[i]) {
      comment = context[i].comment;

      if (messageLength && context[i].comment.length > messageLength) {
        context[i].comment = context[i].comment.slice(0, messageLength) + '...';
      };

      ret += options.fn(context[i]);
      context[i].comment = comment;
    }
  };

  return ret;
};

function addClassHelper(context, options, elem, className, inverse) {
  var ret;

  $.each(context, function () {
    if ((inverse && this.userId != user.id) || (!inverse && this.userId == user.id)) {
      context[elem] = className;
      return false;
    }
  });

  ret = options.fn(context)
  delete context[elem];

  return ret;
};