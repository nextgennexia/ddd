var preparedObj = [];

Array.prototype.last = function () {
  return this[this.length - 1];
};

(function () {
  preparedObj.offerCardTempl = Handlebars.compile($('#offer-card-templ').html());
  preparedObj.offerTempl = Handlebars.compile($('#offer-templ').html());
  preparedObj.userTempl = Handlebars.compile($('#user-plate-templ').html());

  $.get('/offers.json', function (data) {
    preparedObj.offers = data.slice();

    $.each(preparedObj.offers, function () {
      this.states = {
        hiddenComments: true,
        hiddenAnswers: true
      };
      this.user = {
        fullname: 'Гость',
        avatar: '../../../images/users/anonymous.png'
      };
    });
    $.handlers().loginHandler();
  }, 'json');
})();

(function ($) {
  $.handlers = function () {
    var handlers = {

      loginHandler: function () {
        $.login({
          id: $('.login .field-text').val(),
          loginNode: $('.login-wrap .author')
        }, function () {
          $('.login .button').on('click', handlers.loginHandler);
          $.offerCard().renderOffersCards();
          $('.js-comment').on('keypress', handlers.commentingHandler);
        }).authorize();
      },
      offerActionHandler: function (e) {
        var
          targetNode = $(e.target),
          button = targetNode.attr('data-button') || targetNode.parents('[data-button]').attr('data-button'),
          offerNode = $(this),
          offerId = offerNode.attr('data-id'),
          offerCard = $.offerCard({
            offerId: offerId,
            targetNode: targetNode,
            offerNode: offerNode,
            offerLightboxWrapNode: $('.lightbox-wrap')
          });

        switch (button) {
          case 'like':
            offerCard.like();
            break;
          case 'save':
            offerCard.save();
            break;
          case 'viewComment':
            offerCard.viewComments();
            break;
          case 'viewAnswer':
            offerCard.viewAnswers();
            break;
          case 'openOfferLightbox':
            offerCard.openOfferLightbox();
            break;
          case 'closeOfferLightbox':
            offerCard.closeOfferLightbox();
            break;
          case 'removeComment':
            offerCard.removeComment();
            break;
          case 'removeAnswer':
            offerCard.removeAnswer();
            break;
          case 'removeOffer':
            offerCard.removeOffer();
            break;
        }
      },
      commentingHandler: function (e) {
        var offerCard = $.offerCard({
          offerId: $(this).attr('data-id'),
          offerNode: $(this).parents('.js-offer-card-wrap'),
          targetNode: $(e.target),
          offerLightboxWrapNode: $('.lightbox-wrap')
        });

        if (((e.keyCode == 13 || e.which == 13) && !e.shiftKey) && this.value) {
          if ($(this).hasClass('js-comment')) {
            offerCard.addComment(this.value);
          }
          if ($(this).hasClass('js-answer')) {
            offerCard.addAnswer(this.value);
          }

          $(this).val('');
          e.preventDefault();
        }
      }
    }

    return {
      loginHandler: handlers.loginHandler,
      offerActionHandler: handlers.offerActionHandler,
      commentingHandler: handlers.commentingHandler
    }
  };
})(jQuery);